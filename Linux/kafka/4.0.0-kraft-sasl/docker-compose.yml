# https://hub.docker.com/r/bitnami/kafka
# https://github.com/bitnami/containers/blob/main/bitnami/kafka/docker-compose-cluster.yml

version: "3"

# 网桥 -> 方便相互通讯
networks:
  kafka:
    ipam:
      driver: default
      config:
        - subnet: "172.12.6.0/24"

name: kafka
services:
  kafka:
    container_name: kafka
    image: registry.cn-hangzhou.aliyuncs.com/zhengqing/kafka:4.0.0 # 原镜像`bitnami/kafka:4.0.0`
    restart: unless-stopped # 指定容器退出后的重启策略为始终重启，但是不考虑在Docker守护进程启动时就已经停止了的容器
    volumes:
      - "/etc/localtime:/etc/localtime"
      # - "./kafka/data:/bitnami/kafka"
    environment:
      TZ: Asia/Shanghai
      KAFKA_HEAP_OPTS: -Xmx512m -Xms512m

      # KRaft 模式配置
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093 # 集群地址
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv # 集群ID

      # 监听配置
      KAFKA_CFG_LISTENERS: SASL_PLAINTEXT://:9092,CONTROLLER://:9093              # 服务端socket监听
      KAFKA_CFG_ADVERTISED_LISTENERS: SASL_PLAINTEXT://host.docker.internal:9092  # TODO 外网访问地址
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT # 安全协议
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN

      # 控制器安全认证
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CONTROLLER_USER: admin
      KAFKA_CONTROLLER_PASSWORD: 123456

      # Broker 内部通信认证
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_USER: admin
      KAFKA_INTER_BROKER_PASSWORD: 123456

      # 客户端认证配置
      KAFKA_CLIENT_USERS: test
      KAFKA_CLIENT_PASSWORDS: 123456

      # 自动创建主题
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092" # 客户端访问端口
    #      - "9093:9093" # 控制器通信端口
    networks:
      kafka:
        ipv4_address: 172.12.6.21

  # kafka-console-ui图形化管理工具 配置参考：https://github.com/xxd763795151/kafka-console-ui
  kafka-console-ui:
    image: registry.cn-hangzhou.aliyuncs.com/zhengqing/kafka-console-ui # 原镜像`wdkang/kafka-console-ui`
    container_name: kafka-console-ui # 容器名
    restart: unless-stopped # 指定容器退出后的重启策略为始终重启，但是不考虑在Docker守护进程启动时就已经停止了的容器
    volumes:
      - "./kafka-console-ui/data:/app/data"
    #      - "./kafka-console-ui/log:/app/log"
    environment:
      TZ: Asia/Shanghai
    ports: # 映射端口
      - "7766:7766"
    depends_on: # 解决容器依赖启动先后问题
      - kafka
    links: # 配置容器互相连接
      - kafka
    networks:
      kafka:
        ipv4_address: 172.12.6.50
